apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "mimir.fullname" . }}-consul-sidekick
  labels:
  {{- include "mimir.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mimir.fullname" . }}-consul
  labels:
  {{- include "mimir.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.consul.replicas }}
  selector:
    matchLabels:
      name: consul
    {{- include "mimir.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: consul
      {{- include "mimir.selectorLabels" . | nindent 8 }}
      annotations:
        consul-hash: e56ef6821a3557604caccaf6d5820239
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                name: consul
            topologyKey: kubernetes.io/hostname
          - labelSelector:
              matchLabels:
                name: ingester
            namespaces:
            - default
            topologyKey: kubernetes.io/hostname
      containers:
      - args: {{- toYaml .Values.consul.consul.args | nindent 10 }}
        env:
        - name: CHECKPOINT_DISABLE
          value: "1"
        image: {{ .Values.consul.consul.image.repository }}:{{ .Values.consul.consul.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: consul
        ports:
        - containerPort: 8300
          name: server
        - containerPort: 8301
          name: serf
        - containerPort: 8400
          name: client
        - containerPort: 8500
          name: api
        resources: {{- toYaml .Values.consul.consul.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/config
          name: consul
        - mountPath: /consul/data/
          name: data
      - args: {{- toYaml .Values.consul.sidekick.args | nindent 10 }}
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: {{ .Values.consul.sidekick.image.repository }}:{{ .Values.consul.sidekick.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: sidekick
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: consul
        - mountPath: /consul/data/
          name: data
      - args: {{- toYaml .Values.consul.statsdExporter.args | nindent 10 }}
        image: {{ .Values.consul.statsdExporter.image.repository }}:{{ .Values.consul.statsdExporter.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: statsd-exporter
        ports:
        - containerPort: 8000
          name: http-metrics
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: consul
        - mountPath: /consul/data/
          name: data
      - args: {{- toYaml .Values.consul.consulExporter.args | nindent 10 }}
        image: {{ .Values.consul.consulExporter.image.repository }}:{{ .Values.consul.consulExporter.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: consul-exporter
        ports:
        - containerPort: 9107
          name: http-metrics
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: consul
        - mountPath: /consul/data/
          name: data
      serviceAccount: consul-sidekick
      volumes:
      - configMap:
          name: {{ include "mimir.fullname" . }}-consul
        name: consul
      - emptyDir:
          medium: Memory
        name: data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mimir.fullname" . }}-distributor
  labels:
  {{- include "mimir.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.distributor.replicas }}
  selector:
    matchLabels:
      name: distributor
    {{- include "mimir.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: distributor
      {{- include "mimir.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                name: distributor
            topologyKey: kubernetes.io/hostname
      containers:
      - args: {{- toYaml .Values.distributor.distributor.args | nindent 10 }}
        image: {{ .Values.distributor.distributor.image.repository }}:{{ .Values.distributor.distributor.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: distributor
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 9095
          name: grpc
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources: {{- toYaml .Values.distributor.distributor.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/mimir
          name: overrides
      volumes:
      - configMap:
          name: {{ include "mimir.fullname" . }}-overrides
        name: overrides
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mimir.fullname" . }}-querier
  labels:
  {{- include "mimir.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.querier.replicas }}
  selector:
    matchLabels:
      name: querier
    {{- include "mimir.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: querier
      {{- include "mimir.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                name: querier
            topologyKey: kubernetes.io/hostname
      containers:
      - args: {{- toYaml .Values.querier.querier.args | nindent 10 }}
        env:
        - name: JAEGER_REPORTER_MAX_QUEUE_SIZE
          value: "1024"
        image: {{ .Values.querier.querier.image.repository }}:{{ .Values.querier.querier.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: querier
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 9095
          name: grpc
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources: {{- toYaml .Values.querier.querier.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/mimir
          name: overrides
      volumes:
      - configMap:
          name: {{ include "mimir.fullname" . }}-overrides
        name: overrides
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mimir.fullname" . }}-query-frontend
  labels:
  {{- include "mimir.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.queryFrontend.replicas }}
  selector:
    matchLabels:
      name: query-frontend
    {{- include "mimir.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: query-frontend
      {{- include "mimir.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                name: query-frontend
            topologyKey: kubernetes.io/hostname
      containers:
      - args: {{- toYaml .Values.queryFrontend.queryFrontend.args | nindent 10 }}
        image: {{ .Values.queryFrontend.queryFrontend.image.repository }}:{{ .Values.queryFrontend.queryFrontend.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: query-frontend
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 9095
          name: grpc
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources: {{- toYaml .Values.queryFrontend.queryFrontend.resources | nindent 10
          }}
        volumeMounts:
        - mountPath: /etc/mimir
          name: overrides
      volumes:
      - configMap:
          name: {{ include "mimir.fullname" . }}-overrides
        name: overrides