apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "mimir.fullname" . }}-consul-sidekick
  labels:
  {{- include "mimir.labels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mimir.fullname" . }}-consul
  labels:
  {{- include "mimir.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.consul.replicas }}
  selector:
    matchLabels:
      name: consul
    {{- include "mimir.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: consul
      {{- include "mimir.selectorLabels" . | nindent 8 }}
      annotations:
        consul-hash: e56ef6821a3557604caccaf6d5820239
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                name: consul
            topologyKey: kubernetes.io/hostname
          - labelSelector:
              matchLabels:
                name: ingester
            namespaces:
            - {{ .Release.Namespace }}
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - agent
        - -ui
        - -server
        - -client=0.0.0.0
        - -config-file=/etc/config/consul-config.json
        - -bootstrap-expect=1
        - -ui-content-path=/{{ .Release.Namespace }}/consul/
        env:
        - name: CHECKPOINT_DISABLE
          value: "1"
        image: {{ .Values.consul.consul.image.repository }}:{{ .Values.consul.consul.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: consul
        ports:
        - containerPort: 8300
          name: server
        - containerPort: 8301
          name: serf
        - containerPort: 8400
          name: client
        - containerPort: 8500
          name: api
        resources: {{- toYaml .Values.consul.consul.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/config
          name: consul
        - mountPath: /consul/data/
          name: data
      - args:
        - --namespace=$(POD_NAMESPACE)
        - --pod-name=$(POD_NAME)
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: {{ .Values.consul.sidekick.image.repository }}:{{ .Values.consul.sidekick.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: sidekick
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: consul
        - mountPath: /consul/data/
          name: data
      - args:
        - --web.listen-address=:8000
        - --statsd.mapping-config=/etc/config/mapping
        image: {{ .Values.consul.statsdExporter.image.repository }}:{{ .Values.consul.statsdExporter.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: statsd-exporter
        ports:
        - containerPort: 8000
          name: http-metrics
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: consul
        - mountPath: /consul/data/
          name: data
      - args:
        - --consul.server=localhost:8500
        - --web.listen-address=:9107
        - --consul.timeout=1s
        - --no-consul.health-summary
        - --consul.allow_stale
        image: {{ .Values.consul.consulExporter.image.repository }}:{{ .Values.consul.consulExporter.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: consul-exporter
        ports:
        - containerPort: 9107
          name: http-metrics
        resources: {}
        volumeMounts:
        - mountPath: /etc/config
          name: consul
        - mountPath: /consul/data/
          name: data
      serviceAccount: consul-sidekick
      volumes:
      - configMap:
          name: {{ include "mimir.fullname" . }}-consul
        name: consul
      - emptyDir:
          medium: Memory
        name: data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mimir.fullname" . }}-distributor
  labels:
  {{- include "mimir.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.distributor.replicas }}
  selector:
    matchLabels:
      name: distributor
    {{- include "mimir.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: distributor
      {{- include "mimir.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                name: distributor
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -distributor.extend-writes=true
        - -distributor.ha-tracker.enable=true
        - -distributor.ha-tracker.enable-for-all-users=true
        - -distributor.ha-tracker.etcd.endpoints=etcd-client.{{ .Release.Namespace }}.svc.cluster.local.:2379
        - -distributor.ha-tracker.prefix=prom_ha/
        - -distributor.ha-tracker.store=etcd
        - -distributor.health-check-ingesters=true
        - -distributor.ingestion-burst-size=200000
        - -distributor.ingestion-rate-limit=10000
        - -distributor.ring.consul.hostname=consul.{{ .Release.Namespace }}.svc.cluster.local:8500
        - -distributor.ring.prefix=
        - -distributor.ring.store=consul
        - -ingester.ring.consul.hostname=consul.{{ .Release.Namespace }}.svc.cluster.local:8500
        - -ingester.ring.heartbeat-timeout=10m
        - -ingester.ring.prefix=
        - -ingester.ring.replication-factor=3
        - -ingester.ring.store=consul
        - -mem-ballast-size-bytes=1073741824
        - -runtime-config.file=/etc/mimir/overrides.yaml
        - -server.grpc.keepalive.max-connection-age=2m
        - -server.grpc.keepalive.max-connection-age-grace=5m
        - -server.grpc.keepalive.max-connection-idle=1m
        - -server.grpc.keepalive.min-time-between-pings=10s
        - -server.grpc.keepalive.ping-without-stream-allowed=true
        - -server.http-listen-port=8080
        - -target=distributor
        image: {{ .Values.distributor.distributor.image.repository }}:{{ .Values.distributor.distributor.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: distributor
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 9095
          name: grpc
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources: {{- toYaml .Values.distributor.distributor.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/mimir
          name: overrides
      volumes:
      - configMap:
          name: {{ include "mimir.fullname" . }}-overrides
        name: overrides
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mimir.fullname" . }}-querier
  labels:
  {{- include "mimir.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.querier.replicas }}
  selector:
    matchLabels:
      name: querier
    {{- include "mimir.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: querier
      {{- include "mimir.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                name: querier
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -blocks-storage.backend=gcs
        - -blocks-storage.bucket-store.metadata-cache.backend=memcached
        - -blocks-storage.bucket-store.metadata-cache.memcached.addresses=dnssrvnoa+memcached-metadata.{{
          .Release.Namespace }}.svc.cluster.local:11211
        - -blocks-storage.bucket-store.metadata-cache.memcached.max-async-concurrency=50
        - -blocks-storage.bucket-store.metadata-cache.memcached.max-item-size=1048576
        - -blocks-storage.bucket-store.sync-dir=/data/tsdb
        - -blocks-storage.bucket-store.sync-interval=15m
        - -blocks-storage.gcs.bucket-name=example-bucket
        - -distributor.health-check-ingesters=true
        - -ingester.ring.consul.hostname=consul.{{ .Release.Namespace }}.svc.cluster.local:8500
        - -ingester.ring.heartbeat-timeout=10m
        - -ingester.ring.prefix=
        - -ingester.ring.replication-factor=3
        - -ingester.ring.store=consul
        - -mem-ballast-size-bytes=268435456
        - -querier.frontend-address=query-frontend-discovery.{{ .Release.Namespace }}.svc.cluster.local:9095
        - -querier.frontend-client.grpc-max-send-msg-size=104857600
        - -querier.max-concurrent=8
        - -querier.query-ingesters-within=13h
        - -querier.query-store-after=12h
        - -runtime-config.file=/etc/mimir/overrides.yaml
        - -server.grpc.keepalive.min-time-between-pings=10s
        - -server.grpc.keepalive.ping-without-stream-allowed=true
        - -server.http-listen-port=8080
        - -server.http-write-timeout=1m
        - -store-gateway.sharding-ring.consul.hostname=consul.{{ .Release.Namespace }}.svc.cluster.local:8500
        - -store-gateway.sharding-ring.prefix=
        - -store-gateway.sharding-ring.replication-factor=3
        - -store-gateway.sharding-ring.store=consul
        - -store.max-query-length=768h
        - -target=querier
        env:
        - name: JAEGER_REPORTER_MAX_QUEUE_SIZE
          value: "1024"
        image: {{ .Values.querier.querier.image.repository }}:{{ .Values.querier.querier.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: querier
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 9095
          name: grpc
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources: {{- toYaml .Values.querier.querier.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/mimir
          name: overrides
      volumes:
      - configMap:
          name: {{ include "mimir.fullname" . }}-overrides
        name: overrides
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mimir.fullname" . }}-query-frontend
  labels:
  {{- include "mimir.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.queryFrontend.replicas }}
  selector:
    matchLabels:
      name: query-frontend
    {{- include "mimir.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        name: query-frontend
      {{- include "mimir.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                name: query-frontend
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -query-frontend.align-querier-with-step=false
        - -query-frontend.cache-results=true
        - -query-frontend.max-cache-freshness=10m
        - -query-frontend.results-cache.backend=memcached
        - -query-frontend.results-cache.memcached.addresses=dnssrvnoa+memcached-frontend.{{
          .Release.Namespace }}.svc.cluster.local:11211
        - -query-frontend.results-cache.memcached.timeout=500ms
        - -runtime-config.file=/etc/mimir/overrides.yaml
        - -server.grpc-max-recv-msg-size-bytes=104857600
        - -server.grpc.keepalive.min-time-between-pings=10s
        - -server.grpc.keepalive.ping-without-stream-allowed=true
        - -server.http-listen-port=8080
        - -server.http-write-timeout=1m
        - -store.max-query-length=12000h
        - -target=query-frontend
        image: {{ .Values.queryFrontend.queryFrontend.image.repository }}:{{ .Values.queryFrontend.queryFrontend.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        name: query-frontend
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 9095
          name: grpc
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources: {{- toYaml .Values.queryFrontend.queryFrontend.resources | nindent 10
          }}
        volumeMounts:
        - mountPath: /etc/mimir
          name: overrides
      volumes:
      - configMap:
          name: {{ include "mimir.fullname" . }}-overrides
        name: overrides